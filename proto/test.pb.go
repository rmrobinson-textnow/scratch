// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/test.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/mwitkow/go-proto-validators"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InnerMessage struct {
	SomeInteger          int32    `protobuf:"varint,1,opt,name=some_integer,json=someInteger,proto3" json:"some_integer,omitempty"`
	SomeFloat            float64  `protobuf:"fixed64,2,opt,name=some_float,json=someFloat,proto3" json:"some_float,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InnerMessage) Reset()         { *m = InnerMessage{} }
func (m *InnerMessage) String() string { return proto.CompactTextString(m) }
func (*InnerMessage) ProtoMessage()    {}
func (*InnerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_63e8cc32dbfa829b, []int{0}
}
func (m *InnerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InnerMessage.Unmarshal(m, b)
}
func (m *InnerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InnerMessage.Marshal(b, m, deterministic)
}
func (dst *InnerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InnerMessage.Merge(dst, src)
}
func (m *InnerMessage) XXX_Size() int {
	return xxx_messageInfo_InnerMessage.Size(m)
}
func (m *InnerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InnerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InnerMessage proto.InternalMessageInfo

func (m *InnerMessage) GetSomeInteger() int32 {
	if m != nil {
		return m.SomeInteger
	}
	return 0
}

func (m *InnerMessage) GetSomeFloat() float64 {
	if m != nil {
		return m.SomeFloat
	}
	return 0
}

type OuterMessage struct {
	ImportantString      string        `protobuf:"bytes,1,opt,name=important_string,json=importantString,proto3" json:"important_string,omitempty"`
	Inner                *InnerMessage `protobuf:"bytes,2,opt,name=inner,proto3" json:"inner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OuterMessage) Reset()         { *m = OuterMessage{} }
func (m *OuterMessage) String() string { return proto.CompactTextString(m) }
func (*OuterMessage) ProtoMessage()    {}
func (*OuterMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_63e8cc32dbfa829b, []int{1}
}
func (m *OuterMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterMessage.Unmarshal(m, b)
}
func (m *OuterMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterMessage.Marshal(b, m, deterministic)
}
func (dst *OuterMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterMessage.Merge(dst, src)
}
func (m *OuterMessage) XXX_Size() int {
	return xxx_messageInfo_OuterMessage.Size(m)
}
func (m *OuterMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OuterMessage proto.InternalMessageInfo

func (m *OuterMessage) GetImportantString() string {
	if m != nil {
		return m.ImportantString
	}
	return ""
}

func (m *OuterMessage) GetInner() *InnerMessage {
	if m != nil {
		return m.Inner
	}
	return nil
}

func init() {
	proto.RegisterType((*InnerMessage)(nil), "scratch.test.InnerMessage")
	proto.RegisterType((*OuterMessage)(nil), "scratch.test.OuterMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	Test(ctx context.Context, in *OuterMessage, opts ...grpc.CallOption) (*empty.Empty, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) Test(ctx context.Context, in *OuterMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/scratch.test.TestService/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	Test(context.Context, *OuterMessage) (*empty.Empty, error)
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OuterMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scratch.test.TestService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Test(ctx, req.(*OuterMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scratch.test.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Test",
			Handler:    _TestService_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/test.proto",
}

func init() { proto.RegisterFile("proto/test.proto", fileDescriptor_test_63e8cc32dbfa829b) }

var fileDescriptor_test_63e8cc32dbfa829b = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xd1, 0xea, 0xd3, 0x30,
	0x14, 0xc6, 0xd7, 0xb1, 0x8d, 0x2d, 0x2b, 0x5a, 0x72, 0x31, 0x46, 0x15, 0x3a, 0x86, 0x17, 0x03,
	0x5d, 0x82, 0x93, 0x81, 0x37, 0x43, 0x28, 0x28, 0x0c, 0x14, 0xb1, 0xf3, 0x6e, 0xe8, 0xc8, 0xba,
	0xac, 0x0b, 0xae, 0x49, 0x49, 0xce, 0x3a, 0x54, 0xbc, 0xf1, 0xc6, 0x07, 0xf0, 0xd1, 0x7c, 0x80,
	0x42, 0xf1, 0x01, 0x7c, 0x04, 0x69, 0x3a, 0xe7, 0xf8, 0xf7, 0xa6, 0xe7, 0xe4, 0xfb, 0x9d, 0x9c,
	0x73, 0xf2, 0x21, 0x2f, 0xd3, 0x0a, 0x14, 0x05, 0x6e, 0x80, 0xd8, 0x10, 0xbb, 0x26, 0xd6, 0x0c,
	0xe2, 0x03, 0xa9, 0xce, 0xfc, 0x87, 0x89, 0x52, 0xc9, 0x91, 0x53, 0x96, 0x09, 0xca, 0xa4, 0x54,
	0xc0, 0x40, 0x28, 0x69, 0x6a, 0xd6, 0x7f, 0x70, 0x51, 0x6d, 0xb6, 0x3d, 0xed, 0x29, 0x4f, 0x33,
	0xf8, 0x7c, 0x11, 0x17, 0x39, 0x97, 0x3b, 0xa5, 0x69, 0x22, 0xe0, 0x70, 0xda, 0x92, 0x58, 0xa5,
	0x34, 0x3d, 0x0b, 0xf8, 0xa4, 0xce, 0x34, 0x51, 0x53, 0xcb, 0x4c, 0x73, 0x76, 0x14, 0x3b, 0x06,
	0x4a, 0x1b, 0x7a, 0x0d, 0xeb, 0xf2, 0xb1, 0x46, 0xee, 0x52, 0x4a, 0xae, 0xdf, 0x70, 0x63, 0x58,
	0xc2, 0xf1, 0x63, 0xe4, 0x1a, 0x95, 0xf2, 0x8d, 0x90, 0xc0, 0x13, 0xae, 0x87, 0xce, 0xc8, 0x99,
	0xb4, 0xc3, 0x6e, 0x59, 0x04, 0x2d, 0xaf, 0x31, 0xdc, 0x45, 0xfd, 0x4a, 0x5d, 0xd6, 0x22, 0x9e,
	0x23, 0x64, 0xe1, 0xfd, 0x51, 0x31, 0x18, 0x36, 0x47, 0xce, 0xc4, 0x09, 0x07, 0x65, 0x11, 0xe0,
	0x65, 0xe3, 0xf2, 0xbd, 0xab, 0x7f, 0x7f, 0x5e, 0x44, 0xbd, 0x8a, 0x7c, 0x55, 0x81, 0xe3, 0x1f,
	0x0e, 0x72, 0xdf, 0x9e, 0xe0, 0x7f, 0xd3, 0x05, 0xf2, 0x44, 0x9a, 0x29, 0x0d, 0x4c, 0xc2, 0xc6,
	0x80, 0x16, 0x32, 0xb1, 0x8d, 0x7b, 0x21, 0x2e, 0x8b, 0xe0, 0x1e, 0x72, 0x3f, 0xae, 0xd9, 0xf4,
	0xcb, 0x87, 0xaf, 0xb3, 0x27, 0xf3, 0x6f, 0x8f, 0xa2, 0xfb, 0x57, 0x76, 0x65, 0x51, 0xfc, 0x1c,
	0xb5, 0x45, 0xb5, 0x83, 0x9d, 0xa0, 0x3f, 0xf3, 0xc9, 0xed, 0xdb, 0x92, 0xdb, 0xf5, 0xc2, 0x4e,
	0x59, 0x04, 0xcd, 0x91, 0x13, 0xd5, 0x05, 0xb3, 0x35, 0xea, 0xbf, 0xe7, 0x06, 0x56, 0x5c, 0xe7,
	0x22, 0xe6, 0xf8, 0x35, 0x6a, 0x55, 0x29, 0xbe, 0x73, 0xc3, 0xed, 0xac, 0xfe, 0x80, 0xd4, 0x6e,
	0x90, 0x7f, 0x6e, 0x90, 0x97, 0x95, 0x1b, 0x63, 0xef, 0xfb, 0xaf, 0xdf, 0x3f, 0x9b, 0x08, 0x77,
	0x69, 0xfe, 0xd4, 0x1a, 0xbd, 0xed, 0x58, 0xe2, 0xd9, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x17,
	0x45, 0xd9, 0xff, 0xfd, 0x01, 0x00, 0x00,
}
